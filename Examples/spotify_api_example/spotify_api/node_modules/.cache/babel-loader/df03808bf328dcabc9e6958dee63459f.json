{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dot72\\\\Dropbox\\\\2021F\\\\COEN 424\\\\Project\\\\Symphony\\\\test_programs\\\\spotify_api\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport hash from \"./hash\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authEndpoint = 'https://accounts.spotify.com/authorize'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"38bc7a2ef2f94efbb4e7ceb2eedb9cc7\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"]; // Get the hash of the url\n\nhash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = \"\";\n\nclass App extends Component {\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), !this.state.token && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn--loginApp-link\",\n          href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n          children: \"Login to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), this.state.token // Spotify Player Will Go Here In the Next Step\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dot72/Dropbox/2021F/COEN 424/Project/Symphony/test_programs/spotify_api/src/App.js"],"names":["React","Component","hash","authEndpoint","clientId","redirectUri","scopes","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","componentDidMount","_token","access_token","setState","token","render","logo","state","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,OAAO,WAAP;;AAEA,OAAO,MAAMC,YAAY,GAAG,wCAArB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,uBAApB;AACA,MAAMC,MAAM,GAAG,CACb,6BADa,EAEb,0BAFa,CAAf,C,CAKA;;AACAJ,IAAI,GAAGK,MAAM,CAACC,QAAP,CAAgBN,IAAhB,CACFO,SADE,CACQ,CADR,EAEFC,KAFE,CAEI,GAFJ,EAGFC,MAHE,CAGK,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC9B,MAAIA,IAAJ,EAAU;AACR,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,SAAOF,OAAP;AACD,CATE,EASA,EATA,CAAP;AAUAL,MAAM,CAACC,QAAP,CAAgBN,IAAhB,GAAuB,EAAvB;;AACA,MAAMc,GAAN,SAAkBf,SAAlB,CAA4B;AAC1BgB,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,MAAM,GAAGhB,IAAI,CAACiB,YAAlB;;AACA,QAAID,MAAJ,EAAY;AACV;AACA,WAAKE,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEH;AADK,OAAd;AAGD;AACF;;AACDI,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAAC,KAAKC,KAAL,CAAWH,KAAZ,iBACG;AACI,UAAA,SAAS,EAAC,wBADd;AAEI,UAAA,IAAI,EAAG,GAAElB,YAAa,aAAYC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAACmB,IAAP,CAAY,KAAZ,CAAmB,uCAFvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHN,EAUG,KAAKD,KAAL,CAAWH,KAVd,CAWM;AAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBD;;AA9ByB;;AAgC5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport hash from \"./hash\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"38bc7a2ef2f94efbb4e7ceb2eedb9cc7\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\n// Get the hash of the url\nhash = window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce(function(initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      return initial;\n    }, {});\nwindow.location.hash = \"\";\nclass App extends Component {\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n  render() {\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            {!this.state.token && (\n                <a\n                    className=\"btn btn--loginApp-link\"\n                    href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n                >\n                  Login to Spotify\n                </a>\n            )}\n            {this.state.token\n                // Spotify Player Will Go Here In the Next Step\n            }\n          </header>\n        </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}